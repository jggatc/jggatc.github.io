'use strict';var random={};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,
__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,
getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import*as pg from"./pyjsdl.js";import{cos as _cos,pi as _pi,sin as _sin}from"./math.js";import{log as _log,sqrt as _sqrt}from"./math.js";import{choice as _choice,random as _random}from"./random.js";import*as __module_random__ from"./random.js";__nest__(random,
"",__module_random__);var __name__="__main__";export var platform=null;if(platform===null)var platform="js";export var Rand=__class__("Rand",[object],{__module__:__name__,get __init__(){return __get__(this,function(self){self.gauss_next=null;self.pi2=_pi*2})},get gauss(){return __get__(this,function(self,mu,sigma){var z=self.gauss_next;self.gauss_next=null;if(z===null){var x2pi=_random()*self.pi2;var g2rad=_sqrt(-2*_log(1-_random()));var z=_cos(x2pi)*g2rad;self.gauss_next=_sin(x2pi)*g2rad}return mu+
z*sigma})}});export var randrange=function(i,f){return _choice(range(i,f))};if(platform=="js"){if(!hasattr(random,"randrange"))random.randrange=randrange;if(!hasattr(random,"gauss")){var rand=Rand();random.gauss=rand.gauss}}export var Matrix=__class__("Matrix",[object],{__module__:__name__,get __init__(){return __get__(this,function(self,display){self.obj_num=500;self.fps=80;self.display=display;self.width=display.get_width();self.height=display.get_height();self.background=pg.Surface(tuple([self.width,
self.height]));self.clock=pg.time.Clock();self.particles=[];for(var i=0;i<self.obj_num;i++){var particle=Particle(self);self.particles.append(particle)}self.particle_track=null;self.particle_track_x=0;self.particle_track_y=0;self.color=pg.Color(0,0,0);self.color_edge=pg.Color(100,120,140);self.color_track=pg.Color(200,0,0);self.pointer=Pointer();self.info_display=false;self.info_update=false;self.info_surf=null;self.info_fps=null;self.info_fps_index=-1;self.info_time=0;self.font=pg.font.Font(null,
16);if(platform=="js"){var handler=TouchHandler(self);pg.env.event.touchlistener.add_callback(handler);self.pointer_event=pg.event.Event(pg.USEREVENT)}self.clear_background()})},get input(){return __get__(this,function(self){var quit=false;for(var event of pg.event.py_get())if(event.py_metatype==pg.MOUSEBUTTONDOWN){if(event.button==1)self.select_particle(event.pos)}else if(event.py_metatype==pg.MOUSEMOTION)self.pointer.py_update(event.pos);else if(event.py_metatype==pg.KEYDOWN)if(event.key==pg.K_p)self.add_particle();
else if(event.key==pg.K_i)self.set_info_display();else if(event.key==pg.K_r)self.reset();else{if(__in__(event.key,tuple([pg.K_q,pg.K_ESCAPE]))){pg.quit();var quit=true}}else if(event.py_metatype==pg.USEREVENT)self.pointer.set_display(false);else if(event.py_metatype==pg.QUIT){pg.quit();var quit=true}return quit})},get clock_tick(){return __get__(this,function(self){self.clock.tick(self.fps)})},get clear_background(){return __get__(this,function(self){var rect=self.background.fill(self.color);if(platform!=
"jvm")pg.draw.rect(self.background,self.color_edge,tuple([0,0,self.width,self.height]),1);else pg.draw.rect(self.background,self.color_edge,tuple([0,0,self.width-1,self.height-1]),1)})},get set_info_display(){return __get__(this,function(self){self.info_display=!self.info_display;if(self.info_display){var fps=int(self.clock.get_fps());if(self.info_fps!==null)for(var i=0;i<100;i++)self.info_fps[i]=fps;else{self.info_fps=[];for(var i=0;i<100;i++)self.info_fps.append(fps)}self.info_update=true}})},get add_particle(){return __get__(this,
function(self,number){if(typeof number=="undefined"||number!=null&&number.hasOwnProperty("__kwargtrans__"))var number=100;self.obj_num+=number;for(var i=0;i<number;i++){var particle=Particle(self);self.particles.append(particle)}if(self.info_display)self.info_update=true})},get toggle_pointer(){return __get__(this,function(self,x,y){self.pointer.py_update(tuple([x,y]));self.pointer.set_display(true);pg.time.set_timer(self.pointer_event,2E3,true)})},get select_particle(){return __get__(this,function(self,
pos){if(self.particle_track!==null){self.particle_track.set_track(false);self.particle_track=null;self.pointer.set_active(false);self.clear_background()}for(var particle of self.particles)if(particle.rect.collidepoint(pos)){self.particle_track=particle;self.particle_track_x=particle.rect.x;self.particle_track_y=particle.rect.y;particle.set_track(true);self.pointer.set_active(true);break}})},get reset(){return __get__(this,function(self){self.obj_num=500;self.particles=[];for(var i=0;i<self.obj_num;i++){var particle=
Particle(self);self.particles.append(particle)}if(self.particle_track!==null){self.particle_track.set_track(false);self.particle_track=null;self.pointer.set_active(false);self.clear_background()}})},get py_update(){return __get__(this,function(self){if(!self.particle_track)self.display.blit(self.background,tuple([0,0]));else{var particle=self.particle_track;pg.draw.aaline(self.background,self.color_track,tuple([self.particle_track_x+3,self.particle_track_y+3]),tuple([particle.rect.x+3,particle.rect.y+
3]));self.particle_track_x=particle.rect.x;self.particle_track_y=particle.rect.y;self.display.blit(self.background,tuple([0,0]))}for(var particle of self.particles){particle.py_update();self.display.blit(particle.image,tuple([particle.rect.x,particle.rect.y]))}self.display.blit(self.pointer.image,tuple([self.pointer.rect.x,self.pointer.rect.y]));if(self.info_display){self.info_fps_index++;if(self.info_fps_index>99)self.info_fps_index=0;self.info_fps[self.info_fps_index]=int(self.clock.get_fps());
if(pg.time.get_ticks()-self.info_time>1E3){self.info_update=true;self.info_time=pg.time.get_ticks()}if(self.info_update){var fps=int(sum(self.info_fps)/100);var info="Particle:"+str(self.obj_num)+" FPS:"+str(fps);self.image_surf=self.font.render(info,true,tuple([255,0,0]),tuple([0,0,0]));self.info_update=false}self.display.blit(self.image_surf,tuple([1,1]))}})}});export var Particle=__class__("Particle",[object],{__module__:__name__,images:null,area_top:null,area_left:null,area_right:null,area_bottom:null,
__slot__:["image","rect","x","y"],get __init__(){return __get__(this,function(self,matrix){if(Particle.images===null){Particle.images=dict({});if(platform=="pc"){var image_file=os.path.join("data","particle1.png");var image1=pg.image.load(image_file).convert_alpha();var image_file=os.path.join("data","particle2.png");var image2=pg.image.load(image_file).convert_alpha()}else{var image1=pg.image.load("./data/particle1.png");var image2=pg.image.load("./data/particle2.png")}var image=pg.transform.smoothscale(image1,
tuple([7,7]));Particle.images["particle"]=image;var image=pg.transform.smoothscale(image2,tuple([7,7]));Particle.images["track"]=image;Particle.area_top=1;Particle.area_left=1;Particle.area_right=matrix.width-8;Particle.area_bottom=matrix.height-8}self.image=Particle.images["particle"];self.rect=self.image.get_rect();self.x=float(random.randrange(1,matrix.width-self.rect.width-1));self.y=float(random.randrange(1,matrix.height-self.rect.height-1))})},get set_track(){return __get__(this,function(self,
track){if(!track)self.image=Particle.images["particle"];else self.image=Particle.images["track"]})},get py_update(){return __get__(this,function(self){self.x+=random.gauss(0,.5);self.y+=random.gauss(0,.5);if(self.x<self.area_left)self.x=self.area_left;else if(self.x>self.area_right)self.x=self.area_right;if(self.y<self.area_top)self.y=self.area_top;else if(self.y>self.area_bottom)self.y=self.area_bottom;self.rect.x=int(self.x);self.rect.y=int(self.y)})}});export var Pointer=__class__("Pointer",[object],
{__module__:__name__,images:null,get __init__(){return __get__(this,function(self){if(Pointer.images===null){Pointer.images=dict({});if(platform=="pc"){var image_file=os.path.join("data","pointer1.png");var image1=pg.image.load(image_file).convert_alpha();var image_file=os.path.join("data","pointer2.png");var image2=pg.image.load(image_file).convert_alpha()}else{var image1=pg.image.load("./data/pointer1.png");var image2=pg.image.load("./data/pointer2.png")}var image3=pg.Surface(tuple([16,16]),pg.SRCALPHA);
Pointer.images["nonactive"]=image1;Pointer.images["active"]=image2;Pointer.images["blank"]=image3}self.image=Pointer.images["nonactive"];self.rect=self.image.get_rect();self.rect.x=-100;self.rect.y=-100;self.active=false})},get set_active(){return __get__(this,function(self,active){if(!active){self.image=Pointer.images["nonactive"];self.active=false}else{self.image=Pointer.images["active"];self.active=true}})},get set_display(){return __get__(this,function(self,display){if(display)self.set_active(self.active);
else self.image=Pointer.images["blank"]})},get py_update(){return __get__(this,function(self,pos){self.rect.x=pos[0]-8;self.rect.y=pos[1]-8})}});export var TouchHandler=__class__("TouchHandler",[object],{__module__:__name__,get __init__(){return __get__(this,function(self,matrix){self.matrix=matrix;self.move=false;self.pos=dict({"x":0,"y":0})})},get onTouchInitiate(){return __get__(this,function(self,event){self.matrix.pointer.set_display(false)})},get onTouchStart(){return __get__(this,function(self,
event){var touch=event.touches.item(0);var r=pg.env.canvas.getElement().getBoundingClientRect();self.pos["x"]=touch.clientX-round(r.left);self.pos["y"]=touch.clientY-round(r.top);pg.event.mouseMove["x"]=touch.clientX;pg.event.mouseMove["y"]=touch.clientY;if(event.cancelable)event.preventDefault()})},get onTouchEnd(){return __get__(this,function(self,event){if(!self.move){var evt=pg.event.Event(pg.MOUSEBUTTONDOWN,dict({"button":1,"pos":tuple([self.pos["x"],self.pos["y"]])}));pg.event.post(evt);self.matrix.toggle_pointer(self.pos["x"],
self.pos["y"])}else self.move=false;if(event.cancelable)event.preventDefault()})},get onTouchMove(){return __get__(this,function(self,event){var touch=event.touches.item(0);pg.event.mouseMove["x"]=touch.clientX;pg.event.mouseMove["y"]=touch.clientY;var r=pg.env.canvas.getElement().getBoundingClientRect();var x=pg.event.mouseMove["x"]-round(r.left);var y=pg.event.mouseMove["y"]-round(r.top);if(abs(x-self.pos["x"])<50&&!self.move){if(y-self.pos["y"]>100){var evt=pg.event.Event(pg.KEYDOWN,dict({"key":pg.K_p}));
pg.event.post(evt);self.move=true}if(self.pos["y"]-y>100){var evt=pg.event.Event(pg.KEYDOWN,dict({"key":pg.K_i}));pg.event.post(evt);self.move=true}}else if(abs(y-self.pos["y"])<50&&!self.move){if(x-self.pos["x"]>100){var evt=pg.event.Event(pg.KEYDOWN,dict({"key":pg.K_r}));pg.event.post(evt);self.move=true}if(self.pos["x"]-x>100){var evt=pg.event.Event(pg.KEYDOWN,dict({"key":pg.K_q}));pg.event.post(evt);self.move=true}}})},get onTouchCancel(){return __get__(this,function(self,event){})}});export var setup=
function(width,height){pg.init();var display=pg.display.set_mode(tuple([width,height]));pg.display.set_caption("Brownian Motion");if(platform!="js"){var image=pg.image.load(os.path.join("data","particle1.png"));var image=pg.transform.smoothscale(image,tuple([9,9]));var icon=pg.Surface(tuple([32,32]),pg.SRCALPHA);for(var pos of tuple([tuple([7,7]),tuple([23,7]),tuple([15,16])]))icon.blit(image,pos);pg.display.set_icon(icon)}if(platform=="js")pg.surface.bounding_rect_return(false);pg.mouse.set_visible(false);
return display};export var program_exec=function(matrix){matrix.clock_tick();matrix.py_update();pg.display.py_update();var quit=matrix.input();return quit};export var run=function(){program_exec(matrix)};var __left0__=null;export var matrix=__left0__;export var display=__left0__;export var prerun=function(){matrix=Matrix(display);pg.set_callback(run)};export var main_js=function(){display=setup(400,400);var images=["./data/particle1.png","./data/particle2.png","./data/pointer1.png","./data/pointer2.png"];
pg.setup(prerun,images)};export var main=function(){var display=setup(400,400);var matrix=Matrix(display);if(platform=="jvm")pg.bounding_rect_return(false);var quit=false;while(!quit)var quit=program_exec(matrix)};if(__name__=="__main__")if(__in__(platform,tuple(["pc","jvm"])))main();else if(platform=="js")main_js();

//# sourceMappingURL=brownian.map