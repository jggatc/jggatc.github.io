'use strict';import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,
__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,_sort,abs,all,any,assert,bin,bool,bytearray,bytes,callable,chr,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,
hex,input,isinstance,issubclass,len,list,map,max,min,object,oct,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{int}from"./pyjsdl.pylib.js";var __name__="pyjsdl.rect";export var __docformat__="restructuredtext";export var Rect=__class__("Rect",[object],{__module__:__name__,__slots__:["_x","_y","_width","_height"],get __init__(){return __get__(this,function(self){var args=
tuple([].slice.apply(arguments).slice(1));var ln=len(args);if(ln==1)if(args.index){var arg=args[0];var ln=len(arg)}else var arg=args;else var arg=args;if(ln==4&&arg.index){var x=arg[0];var y=arg[1];var width=arg[2];var height=arg[3]}else if(ln==2){var x=arg[0][0];var y=arg[0][1];var width=arg[1][0];var height=arg[1][1]}else{if(arg.rect)var arg=arg.rect;var x=arg.x;var y=arg.y;var width=arg.width;var height=arg.height}self._x=~~x;self._y=~~y;self._width=~~width;self._height=~~height})},get __str__(){return __get__(this,
function(self){return"<rect({}, {}, {}, {})>".format(self._x,self._y,self._width,self._height)})},get __repr__(){return __get__(this,function(self){var class_name=self.__class__.__name__;return"{}({}, {}, {}, {})".format(class_name,self._x,self._y,self._width,self._height)})},get __getitem__(){return __get__(this,function(self,index){if(index==0)return self._x;else if(index==1)return self._y;else if(index==2)return self._width;else if(index==3)return self._height})},get __setitem__(){return __get__(this,
function(self,index,val){if(index==0)self._x=int(val);else if(index==1)self._y=int(val);else if(index==2)self._width=int(val);else if(index==3)self._height=int(val)})},get __iter__(){return __get__(this,function(self){return py_iter([self._x,self._y,self._width,self._height])})},[Symbol.iterator](){return this.__iter__()},get __len__(){return __get__(this,function(self){return 4})},get __bool__(){return __get__(this,function(self){return self._width&&self._height})},get __nonzero__(){return __get__(this,
function(self){return self._width&&self._height})},get __eq__(){return __get__(this,function(self,other){if(hasattr(other,"_x"))return self._x==other._x&&self._y==other._y&&self._width==other._width&&self._height==other._height;else return self._x==other[0]&&self._y==other[1]&&self._width==other[2]&&self._height==other[3]})},get __ne__(){return __get__(this,function(self,other){if(hasattr(other,"_x"))return self._x!=other._x||self._y!=other._y||self._width!=other._width||self._height!=other._height;
else return self._x!=other[0]||self._y!=other[1]||self._width!=other[2]||self._height!=other[3]})},get copy(){return __get__(this,function(self){return Rect(self._x,self._y,self._width,self._height)})},get move(){return __get__(this,function(self){var offset=tuple([].slice.apply(arguments).slice(1));if(len(offset)==2){var x=offset[0];var y=offset[1]}else{var _offset=offset[0];var x=_offset[0];var y=_offset[1]}return Rect(self._x+x,self._y+y,self._width,self._height)})},get move_ip(){return __get__(this,
function(self){var offset=tuple([].slice.apply(arguments).slice(1));if(len(offset)==2){var x=offset[0];var y=offset[1]}else{var _offset=offset[0];var x=_offset[0];var y=_offset[1]}self._x=self._x+int(x);self._y=self._y+int(y);return null})},get inflate(){return __get__(this,function(self){var offset=tuple([].slice.apply(arguments).slice(1));if(len(offset)==2){var x=offset[0];var y=offset[1]}else{var _offset=offset[0];var x=_offset[0];var y=_offset[1]}return Rect(self._x-int(x/2),self._y-int(y/2),
self._width+x,self._height+y)})},get inflate_ip(){return __get__(this,function(self){var offset=tuple([].slice.apply(arguments).slice(1));if(len(offset)==2){var x=offset[0];var y=offset[1]}else{var _offset=offset[0];var x=_offset[0];var y=_offset[1]}self._x=self._x-int(x/2);self._y=self._y-int(y/2);self._width=self._width+int(x);self._height=self._height+int(y);return null})},get clip(){return __get__(this,function(self,rect){if(!(self._x<rect._x+rect._width&&rect._x<self._x+self._width&&self._y<
rect._y+rect._height&&rect._y<self._y+self._height))return Rect(0,0,0,0);else{var x=self._x>rect._x?self._x:rect._x;var y=self._y>rect._y?self._y:rect._y;var s=self._x+self._width;var r=rect._x+rect._width;var w=(s<r?s:r)-x;var s=self._y+self._height;var r=rect._y+rect._height;var h=(s<r?s:r)-y;return Rect(x,y,w,h)}})},get contains(){return __get__(this,function(self,rect){return self._x<=rect._x&&self._x+self._width>=rect._x+rect._width&&self._y<=rect._y&&self._y+self._height>=rect._y+rect._height})},
get intersects(){return __get__(this,function(self,rect){return self._x<rect._x+rect._width&&rect._x<self._x+self._width&&self._y<rect._y+rect._height&&rect._y<self._y+self._height})},get union(){return __get__(this,function(self,rect){var x=self._x<rect._x?self._x:rect._x;var y=self._y<rect._y?self._y:rect._y;var s=self._x+self._width;var r=rect._x+rect._width;var w=(s>r?s:r)-x;var s=self._y+self._height;var r=rect._y+rect._height;var h=(s>r?s:r)-y;return Rect(x,y,w,h)})},get union_ip(){return __get__(this,
function(self,rect){var x=self._x<rect._x?self._x:rect._x;var y=self._y<rect._y?self._y:rect._y;var s=self._x+self._width;var r=rect._x+rect._width;var w=(s>r?s:r)-x;var s=self._y+self._height;var r=rect._y+rect._height;var h=(s>r?s:r)-y;self._x=x;self._y=y;self._width=w;self._height=h;return null})},get unionall(){return __get__(this,function(self,rect_list){var x1=self._x;var y1=self._y;var x2=self._x+self._width;var y2=self._y+self._height;for(var r of rect_list){if(r._x<x1)var x1=r._x;if(r._y<
y1)var y1=r._y;var rx2=r._x+r._width;if(rx2>x2)var x2=rx2;var ry2=r._y+r._height;if(ry2>y2)var y2=ry2}return Rect(x1,y1,x2-x1,y2-y1)})},get unionall_ip(){return __get__(this,function(self,rect_list){var x1=self._x;var y1=self._y;var x2=self._x+self._width;var y2=self._y+self._height;for(var r of rect_list){if(r._x<x1)var x1=r._x;if(r._y<y1)var y1=r._y;var rx2=r._x+r._width;if(rx2>x2)var x2=rx2;var ry2=r._y+r._height;if(ry2>y2)var y2=ry2}self._x=x1;self._y=y1;self._width=x2-x1;self._height=y2-y1;return null})},
get clamp(){return __get__(this,function(self,rect){if(self._width<rect._width)if(self._x<rect._x)var x=rect._x;else if(self._x+self._width>rect._x+rect._width)var x=rect._x+rect._width-self._width;else var x=self._x;else var x=rect._x-int((self._width-rect._width)/2);if(self._height<rect._height)if(self._y<rect._y)var y=rect._y;else if(self._y+self._height>rect._y+rect._height)var y=rect._y+rect._height-self._height;else var y=self._y;else var y=rect._y-int((self._height-rect._height)/2);return Rect(x,
y,self._width,self._height)})},get clamp_ip(){return __get__(this,function(self,rect){if(self._width<rect._width)if(self._x<rect._x)var x=rect._x;else if(self._x+self._width>rect._x+rect._width)var x=rect._x+rect._width-self._width;else var x=self._x;else var x=rect._x-int((self._width-rect._width)/2);if(self._height<rect._height)if(self._y<rect._y)var y=rect._y;else if(self._y+self._height>rect._y+rect._height)var y=rect._y+rect._height-self._height;else var y=self._y;else var y=rect._y-int((self._height-
rect._height)/2);self._x=x;self._y=y;return null})},get set(){return __get__(this,function(self){var args=tuple([].slice.apply(arguments).slice(1));var ln=len(args);if(ln==1)if(args.index){var arg=args[0];var ln=len(arg)}else var arg=args;else var arg=args;if(ln==4&&arg.append){var x=arg[0];var y=arg[1];var width=arg[2];var height=arg[3]}else if(ln==2){var x=arg[0][0];var y=arg[0][1];var width=arg[1][0];var height=arg[1][1]}else{if(arg.rect)var arg=arg.rect;var x=arg.x;var y=arg.y;var width=arg.width;
var height=arg.height}self._x=~~x;self._y=~~y;self._width=~~width;self._height=~~height})},get collidepoint(){return __get__(this,function(self){var point=tuple([].slice.apply(arguments).slice(1));if(len(point)==2)return self._x<=point[0]&&point[0]<self._x+self._width&&(self._y<=point[1]&&point[1]<self._y+self._height);else return self._x<=point[0][0]&&point[0][0]<self._x+self._width&&(self._y<=point[0][1]&&point[0][1]<self._y+self._height)})},get colliderect(){return __get__(this,function(self,rect){return self._x<
rect._x+rect._width&&rect._x<self._x+self._width&&self._y<rect._y+rect._height&&rect._y<self._y+self._height})},get collidelist(){return __get__(this,function(self,rects){for(var [i,rect]of enumerate(rects))if(self._x<rect._x+rect._width&&rect._x<self._x+self._width&&self._y<rect._y+rect._height&&rect._y<self._y+self._height)return i;return-1})},get collidelistall(){return __get__(this,function(self,rects){var collided=[];for(var [i,rect]of enumerate(rects))if(self._x<rect._x+rect._width&&rect._x<
self._x+self._width&&self._y<rect._y+rect._height&&rect._y<self._y+self._height)collided.append(i);return collided})},get collidedict(){return __get__(this,function(self,rects){for(var rect_key of rects.py_keys()){var rect=rects[rect_key];if(self._x<rect._x+rect._width&&rect._x<self._x+self._width&&self._y<rect._y+rect._height&&rect._y<self._y+self._height)return tuple([rect_key,rect])}return null})},get collidedictall(){return __get__(this,function(self,rects){var collided=[];for(var rect_key of rects.py_keys()){var rect=
rects[rect_key];if(self._x<rect._x+rect._width&&rect._x<self._x+self._width&&self._y<rect._y+rect._height&&rect._y<self._y+self._height)collided.append(tuple([rect_key,rect]))}return collided})},get toString(){return __get__(this,function(self){return self.__str__()})},get _get_x(){return __get__(this,function(self){return self._x})},get _get_y(){return __get__(this,function(self){return self._y})},get _get_width(){return __get__(this,function(self){return self._width})},get _get_height(){return __get__(this,
function(self){return self._height})},get _get_center(){return __get__(this,function(self){return tuple([self._x+int(self._width/2),self._y+int(self._height/2)])})},get _get_centerx(){return __get__(this,function(self){return self._x+int(self._width/2)})},get _get_centery(){return __get__(this,function(self){return self._y+int(self._height/2)})},get _get_top(){return __get__(this,function(self){return self._y})},get _get_left(){return __get__(this,function(self){return self._x})},get _get_bottom(){return __get__(this,
function(self){return self._y+self._height})},get _get_right(){return __get__(this,function(self){return self._x+self._width})},get _get_topleft(){return __get__(this,function(self){return tuple([self._x,self._y])})},get _get_bottomleft(){return __get__(this,function(self){return tuple([self._x,self._y+self._height])})},get _get_topright(){return __get__(this,function(self){return tuple([self._x+self._width,self._y])})},get _get_bottomright(){return __get__(this,function(self){return tuple([self._x+
self._width,self._y+self._height])})},get _get_midtop(){return __get__(this,function(self){return tuple([self._x+int(self._width/2),self._y])})},get _get_midleft(){return __get__(this,function(self){return tuple([self._x,self._y+int(self._height/2)])})},get _get_midbottom(){return __get__(this,function(self){return tuple([self._x+int(self._width/2),self._y+self._height])})},get _get_midright(){return __get__(this,function(self){return tuple([self._x+self._width,self._y+int(self._height/2)])})},get _get_size(){return __get__(this,
function(self){return tuple([self._width,self._height])})},get _get_w(){return __get__(this,function(self){return self._width})},get _get_h(){return __get__(this,function(self){return self._height})},get _set_x(){return __get__(this,function(self,val){self._x=int(val)})},get _set_y(){return __get__(this,function(self,val){self._y=int(val)})},get _set_width(){return __get__(this,function(self,val){self._width=int(val)})},get _set_height(){return __get__(this,function(self,val){self._height=int(val)})},
get _set_center(){return __get__(this,function(self,val){self._x=int(val[0])-int(self._width/2);self._y=int(val[1])-int(self._height/2)})},get _set_centerx(){return __get__(this,function(self,val){self._x=int(val)-int(self._width/2)})},get _set_centery(){return __get__(this,function(self,val){self._y=int(val)-int(self._height/2)})},get _set_top(){return __get__(this,function(self,val){self._y=int(val)})},get _set_left(){return __get__(this,function(self,val){self._x=int(val)})},get _set_bottom(){return __get__(this,
function(self,val){self._y=int(val)-self._height})},get _set_right(){return __get__(this,function(self,val){self._x=int(val)-self._width})},get _set_topleft(){return __get__(this,function(self,val){self._x=int(val[0]);self._y=int(val[1])})},get _set_bottomleft(){return __get__(this,function(self,val){self._x=int(val[0]);self._y=int(val[1])-self._height})},get _set_topright(){return __get__(this,function(self,val){self._x=int(val[0])-self._width;self._y=int(val[1])})},get _set_bottomright(){return __get__(this,
function(self,val){self._x=int(val[0])-self._width;self._y=int(val[1])-self._height})},get _set_midtop(){return __get__(this,function(self,val){self._x=int(val[0])-int(self._width/2);self._y=int(val[1])})},get _set_midleft(){return __get__(this,function(self,val){self._x=int(val[0]);self._y=int(val[1])-int(self._height/2)})},get _set_midbottom(){return __get__(this,function(self,val){self._x=int(val[0])-int(self._width/2);self._y=int(val[1])-self._height})},get _set_midright(){return __get__(this,
function(self,val){self._x=int(val[0])-self._width;self._y=int(val[1])-int(self._height/2)})},get _set_size(){return __get__(this,function(self,val){self._width=int(val[0]);self._height=int(val[1])})},get _set_w(){return __get__(this,function(self,val){self._width=int(val)})},get _set_h(){return __get__(this,function(self,val){self._height=int(val)})}});Object.defineProperty(Rect,"h",property.call(Rect,Rect._get_h,Rect._set_h));Object.defineProperty(Rect,"w",property.call(Rect,Rect._get_w,Rect._set_w));
Object.defineProperty(Rect,"size",property.call(Rect,Rect._get_size,Rect._set_size));Object.defineProperty(Rect,"midright",property.call(Rect,Rect._get_midright,Rect._set_midright));Object.defineProperty(Rect,"midbottom",property.call(Rect,Rect._get_midbottom,Rect._set_midbottom));Object.defineProperty(Rect,"midleft",property.call(Rect,Rect._get_midleft,Rect._set_midleft));Object.defineProperty(Rect,"midtop",property.call(Rect,Rect._get_midtop,Rect._set_midtop));Object.defineProperty(Rect,"bottomright",
property.call(Rect,Rect._get_bottomright,Rect._set_bottomright));Object.defineProperty(Rect,"topright",property.call(Rect,Rect._get_topright,Rect._set_topright));Object.defineProperty(Rect,"bottomleft",property.call(Rect,Rect._get_bottomleft,Rect._set_bottomleft));Object.defineProperty(Rect,"topleft",property.call(Rect,Rect._get_topleft,Rect._set_topleft));Object.defineProperty(Rect,"right",property.call(Rect,Rect._get_right,Rect._set_right));Object.defineProperty(Rect,"bottom",property.call(Rect,
Rect._get_bottom,Rect._set_bottom));Object.defineProperty(Rect,"left",property.call(Rect,Rect._get_left,Rect._set_left));Object.defineProperty(Rect,"top",property.call(Rect,Rect._get_top,Rect._set_top));Object.defineProperty(Rect,"centery",property.call(Rect,Rect._get_centery,Rect._set_centery));Object.defineProperty(Rect,"centerx",property.call(Rect,Rect._get_centerx,Rect._set_centerx));Object.defineProperty(Rect,"center",property.call(Rect,Rect._get_center,Rect._set_center));Object.defineProperty(Rect,
"height",property.call(Rect,Rect._get_height,Rect._set_height));Object.defineProperty(Rect,"width",property.call(Rect,Rect._get_width,Rect._set_width));Object.defineProperty(Rect,"y",property.call(Rect,Rect._get_y,Rect._set_y));Object.defineProperty(Rect,"x",property.call(Rect,Rect._get_x,Rect._set_x));export var RectPool=__class__("RectPool",[object],{__module__:__name__,get __init__(){return __get__(this,function(self){self._cache=[];self._length=0;self.add=self.append;self.addAll=self.extend})},
get __len__(){return __get__(this,function(self){return self._length})},get append(){return __get__(this,function(self,item){self._cache.append(item);self._length++})},get extend(){return __get__(this,function(self,lst){for(var item of lst){self._cache.append(item);self._length++}})},get py_get(){return __get__(this,function(self,x,y,width,height){if(self._length>0){var rect=self._cache.py_pop();self._length--;rect._x=x;rect._y=y;rect._width=width;rect._height=height;return rect}else return Rect(x,
y,width,height)})},get copy(){return __get__(this,function(self,r){if(self._length>0){var rect=self._cache.py_pop();self._length--;rect._x=r._x;rect._y=r._y;rect._width=r._width;rect._height=r._height;return rect}else return Rect(r._x,r._y,r._width,r._height)})}});export var rectPool=RectPool();

//# sourceMappingURL=pyjsdl.rect.map