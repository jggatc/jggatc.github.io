'use strict';var math={};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,
__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,_sort,abs,all,any,assert,bin,bool,bytearray,bytes,callable,chr,delattr,dict,dir,divmod,enumerate,filter,float,getattr,
hasattr,hex,input,int,isinstance,issubclass,len,list,map,max,min,object,oct,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{os}from"./pyjsdl.pylib.js";import*as __module_math__ from"./math.js";__nest__(math,"",__module_math__);import*as pygame from"./pyjsdl.js";var __name__="util";export var load_image=function(file_name,frames,path,colorkey,errorhandle){if(typeof frames==
"undefined"||frames!=null&&frames.hasOwnProperty("__kwargtrans__"))var frames=1;if(typeof path=="undefined"||path!=null&&path.hasOwnProperty("__kwargtrans__"))var path="data";if(typeof colorkey=="undefined"||colorkey!=null&&colorkey.hasOwnProperty("__kwargtrans__"))var colorkey=null;if(typeof errorhandle=="undefined"||errorhandle!=null&&errorhandle.hasOwnProperty("__kwargtrans__"))var errorhandle=true;var full_name=os.path.join(path,file_name);try{if(frames==1)var image=pygame.image.load(full_name);
else if(frames>1){var images=[];var image=pygame.image.load(full_name);var __left0__=image.get_size();var width=__left0__[0];var height=__left0__[1];var width=Math.floor(width/frames);for(var frame=0;frame<frames;frame++){var frame_num=width*frame;var image_frame=image.subsurface(tuple([frame_num,0]),tuple([width,height])).copy();images.append(image_frame)}return images}}catch(__except0__){if(isinstance(__except0__,pygame.error))if(errorhandle){__except0__.__cause__=null;throw __except0__;}else return null;
else throw __except0__;}if(image.get_alpha())var image=image.convert_alpha();else var image=image.convert();if(colorkey!==null){if(colorkey==-1)var colorkey=image.get_at(tuple([0,0]));image.set_colorkey(colorkey,RLEACCEL)}return image};export var trig_compute=function(){var sin_table=dict({});var cos_table=dict({});for(var angle=0;angle<360;angle++){var angle_rad=angle*math.pi/180;var sin_angle=math.sin(angle_rad);var cos_angle=math.cos(angle_rad);sin_table[angle]=sin_angle;cos_table[angle]=cos_angle}return tuple([sin_table,
cos_table])};var __left0__=trig_compute();export var sin_table=__left0__[0];export var cos_table=__left0__[1];

//# sourceMappingURL=util.map