<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>GATC - Artificial Life, Biology, Programming</title><link href="https://gatc.ca/" rel="alternate"/><link href="https://gatc.ca/feeds/artificial-life-biology-programming.rss.xml" rel="self"/><id>https://gatc.ca/</id><updated>2025-01-22T20:48:00-05:00</updated><subtitle>Code of Life</subtitle><entry><title>Biomorph Entity App</title><link href="https://gatc.ca/biomorph-entity-app/" rel="alternate"/><published>2025-01-22T20:48:00-05:00</published><updated>2025-01-22T20:48:00-05:00</updated><author><name>JG</name></author><id>tag:gatc.ca,2025-01-22:/biomorph-entity-app/</id><summary type="html">&lt;p&gt;The &lt;a class="reference external" href="https://gatc.ca/projects/biomorph-entity/"&gt;Biomorph Entity&lt;/a&gt; program simulates an artificial life entity. Simple rules of segment interaction leads to emergence of complex behaviour.&lt;/p&gt;</summary><content type="html">&lt;p&gt;The &lt;a class="reference external" href="https://gatc.ca/projects/biomorph-entity/"&gt;Biomorph Entity&lt;/a&gt; program simulates an artificial life entity. Simple rules of segment interaction leads to emergence of complex behaviour.&lt;/p&gt;
&lt;div class="jsapp-box" data-width="400" data-height="300" id="app-container-biomorph-entity"&gt;
    &lt;input type="button" value="Launch" id="launch-button" onclick="appScriptLauncher('biomorph-entity')"&gt;
    &lt;div id="app-title"&gt;Biomorph Entity&lt;/div&gt;
&lt;/div&gt;&lt;div class="app-caption docutils container"&gt;
The app was compiled to JavaScript from a script coded in &lt;a class="reference external" href="https://python.org/"&gt;Python&lt;/a&gt; and the &lt;a class="reference external" href="https://gatc.ca/projects/pyjsdl-ts/"&gt;Pyjsdl&lt;/a&gt; module.&lt;/div&gt;
&lt;p&gt;The program was coded in &lt;a class="reference external" href="https://python.org"&gt;Python programming language&lt;/a&gt; and &lt;a class="reference external" href="https://www.pygame.org"&gt;Pygame multimedia library&lt;/a&gt;, and was compiled to JavaScript with the &lt;a class="reference external" href="https://www.transcrypt.org/"&gt;Transcrypt Python-to-JavaScript compiler&lt;/a&gt; and the &lt;a class="reference external" href="https://gatc.ca/projects/pyjsdl-ts/"&gt;Pyjsdl-ts library&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pyjsdl is an HTML5 multimedia library that is a substitute for Pygame functionality. Pyjsdl-ts is a Pyjsdl port adapted for Transcrypt. Transcrypt can compile Python&amp;nbsp;3 code to JavaScript, deriving an app that can run in the browser. For information on the Pyjsdl-ts, check &lt;a class="reference external" href="https://gatc.ca/usage-of-pyjsdl-with-transcrypt/"&gt;Usage of Pyjsdl with Transcrypt&lt;/a&gt; post.&lt;/p&gt;
</content><category term="Artificial Life, Biology, Programming"/><category term="alife"/><category term="pyjsdl"/><category term="pyjsdl-ts"/><category term="transcrypt"/></entry><entry><title>Biomorph Evolve App</title><link href="https://gatc.ca/biomorph-evolve-app/" rel="alternate"/><published>2021-12-12T01:03:00-05:00</published><updated>2021-12-12T01:03:00-05:00</updated><author><name>JG</name></author><id>tag:gatc.ca,2021-12-12:/biomorph-evolve-app/</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://gatc.ca/projects/biomorph-evolve/"&gt;Biomorph Evolve&lt;/a&gt; is a computer simulation of biomorph evolution. A biomorph is a form that resembles a living organism. The simulation derives altered biomorph morphology due to an evolutionary process. The program is an implementation of &lt;a class="reference external" href="https://richarddawkins.net/"&gt;Richard Dawkins&lt;/a&gt;' Blind Watchmaker algorithm discussed in his book &lt;a class="reference external" href="https://en.wikipedia.org/wiki/The_Blind_Watchmaker"&gt;The Blind Watchmaker&lt;/a&gt; and his …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://gatc.ca/projects/biomorph-evolve/"&gt;Biomorph Evolve&lt;/a&gt; is a computer simulation of biomorph evolution. A biomorph is a form that resembles a living organism. The simulation derives altered biomorph morphology due to an evolutionary process. The program is an implementation of &lt;a class="reference external" href="https://richarddawkins.net/"&gt;Richard Dawkins&lt;/a&gt;' Blind Watchmaker algorithm discussed in his book &lt;a class="reference external" href="https://en.wikipedia.org/wiki/The_Blind_Watchmaker"&gt;The Blind Watchmaker&lt;/a&gt; and his article &lt;a class="reference external" href="https://www.richarddawkins.net/wp-content/uploads/sites/41/2014/06/Evolution-of-Evolvability.pdf"&gt;The Evolution of Evolvability in Artificial Life&lt;/a&gt;. The biomorph morphology is under control of a number of genes and undergo random mutation to derive altered biomorph progeny.&lt;/p&gt;
&lt;p&gt;In nature evolution is controlled by natural selection, whereas this program is an evolutionary process through artificial selection. The simulation initiates with a group of biomorphs each with a random generated genome. Selection of one of the biomorphs to use as parental form proceeds to the next generation whereby the selected biomorph is placed in the center grid surrounded by mutant progeny biomorphs. Through continuous selection endless forms may be evolved.&lt;/p&gt;
&lt;p&gt;Biomorph Evolve was programmed in &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; and &lt;a class="reference external" href="https://www.pygame.org"&gt;Pygame&lt;/a&gt; and compiled to JavaScript with &lt;a class="reference external" href="https://www.transcrypt.org/"&gt;Transcrypt&lt;/a&gt; and the &lt;a class="reference external" href="https://gatc.ca/projects/pyjsdl-ts/"&gt;Pyjsdl&lt;/a&gt; library to an online deployable app. Controls are lmouse/touch for selection and key-r/touch-swipe for reset.&lt;/p&gt;
&lt;div class="jsapp-box" data-width="480" data-height="480" id="app-container-biomorph-evolve"&gt;
    &lt;input type="button" value="Launch" id="launch-button" onclick="appScriptLauncher('biomorph-evolve')"&gt;
    &lt;div id="app-title"&gt;Biomorph Evolve&lt;/div&gt;
&lt;/div&gt;</content><category term="Artificial Life, Biology, Programming"/><category term="alife"/><category term="pyjsdl"/><category term="pyjsdl-ts"/><category term="transcrypt"/></entry><entry><title>Biomorph Entity Simulation</title><link href="https://gatc.ca/biomorph-entity-simulation/" rel="alternate"/><published>2009-12-03T13:44:00-05:00</published><updated>2009-12-03T13:44:00-05:00</updated><author><name>JG</name></author><id>tag:gatc.ca,2009-12-03:/biomorph-entity-simulation/</id><summary type="html">&lt;p&gt;The &lt;a class="reference external" href="https://gatc.ca/projects/biomorph-entity/"&gt;Biomorph Entity&lt;/a&gt; program simulates a virtual creature. From experimenting with simple rules that govern the interaction of the segments, the computer simulation developed an emergent behaviour of the collective. In the future, I may add genes to express the discreet rules and in using genetic programming techniques bring evolution …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The &lt;a class="reference external" href="https://gatc.ca/projects/biomorph-entity/"&gt;Biomorph Entity&lt;/a&gt; program simulates a virtual creature. From experimenting with simple rules that govern the interaction of the segments, the computer simulation developed an emergent behaviour of the collective. In the future, I may add genes to express the discreet rules and in using genetic programming techniques bring evolution to the virtual environment, as I did in my microbial simulation program, &lt;a class="reference external" href="https://gatc.ca/projects/microbe/"&gt;Microbe&lt;/a&gt;. This should allow experimentation to evolve novel biomorphs. The program was written in &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; programming language and &lt;a class="reference external" href="https://www.pygame.org/"&gt;Pygame&lt;/a&gt; multimedia library. The &lt;a class="reference external" href="https://gatc.ca/projects/biomorph-entity/"&gt;Biomorph Entity&lt;/a&gt; program can be found on my &lt;a class="reference external" href="/projects/"&gt;projects&lt;/a&gt; page, and a video clip of the simulation is on my &lt;a class="reference external" href="/media/videos/"&gt;demo videos&lt;/a&gt; page.&lt;/p&gt;
</content><category term="Artificial Life, Biology, Programming"/></entry><entry><title>Microbial Simulation Video</title><link href="https://gatc.ca/microbial-simulation-video/" rel="alternate"/><published>2009-11-16T14:53:00-05:00</published><updated>2009-11-16T14:53:00-05:00</updated><author><name>JG</name></author><id>tag:gatc.ca,2009-11-16:/microbial-simulation-video/</id><summary type="html">&lt;p&gt;I have uploaded a &lt;a class="reference external" href="/media/videos/"&gt;video&lt;/a&gt; clip to demonstrate my program &lt;a class="reference external" href="https://gatc.ca/projects/microbe/"&gt;Microbe&lt;/a&gt;, a Microbial Simulation. &lt;a class="reference external" href="https://gatc.ca/projects/microbe/"&gt;Microbe&lt;/a&gt;, written in &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; programming language, simulates the biological behaviour of microbes, and explores the dimension of artificial life. You can view the video on the &lt;a class="reference external" href="/media/videos/"&gt;demo videos&lt;/a&gt; page. I will upload more clips of my …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have uploaded a &lt;a class="reference external" href="/media/videos/"&gt;video&lt;/a&gt; clip to demonstrate my program &lt;a class="reference external" href="https://gatc.ca/projects/microbe/"&gt;Microbe&lt;/a&gt;, a Microbial Simulation. &lt;a class="reference external" href="https://gatc.ca/projects/microbe/"&gt;Microbe&lt;/a&gt;, written in &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; programming language, simulates the biological behaviour of microbes, and explores the dimension of artificial life. You can view the video on the &lt;a class="reference external" href="/media/videos/"&gt;demo videos&lt;/a&gt; page. I will upload more clips of my other &lt;a class="reference external" href="/projects/"&gt;projects&lt;/a&gt;.&lt;/p&gt;
</content><category term="Artificial Life, Biology, Programming"/></entry><entry><title>Biology Simulations</title><link href="https://gatc.ca/biology-simulations/" rel="alternate"/><published>2009-10-11T17:50:00-04:00</published><updated>2009-10-11T17:50:00-04:00</updated><author><name>JG</name></author><id>tag:gatc.ca,2009-10-11:/biology-simulations/</id><summary type="html">&lt;p&gt;In addition to extensive updating &lt;a class="reference external" href="https://gatc.ca/projects/microbe/"&gt;Microbe - Microbial Simulation&lt;/a&gt;, I have updated my other biology simulation programs, &lt;a class="reference external" href="https://gatc.ca/projects/replicator/"&gt;Replicator Machine&lt;/a&gt; and &lt;a class="reference external" href="https://gatc.ca/projects/neural-construct/"&gt;Neural Construct&lt;/a&gt;. These &lt;a class="reference external" href="https://gatc.ca/projects/"&gt;projects&lt;/a&gt; have been programmed in &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;/&lt;a class="reference external" href="https://www.pygame.org/"&gt;Pygame&lt;/a&gt;. One important update has been to adapt the GUI interface panel that I started in the &lt;a class="reference external" href="https://gatc.ca/projects/microbe/"&gt;Microbe&lt;/a&gt; program to function in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In addition to extensive updating &lt;a class="reference external" href="https://gatc.ca/projects/microbe/"&gt;Microbe - Microbial Simulation&lt;/a&gt;, I have updated my other biology simulation programs, &lt;a class="reference external" href="https://gatc.ca/projects/replicator/"&gt;Replicator Machine&lt;/a&gt; and &lt;a class="reference external" href="https://gatc.ca/projects/neural-construct/"&gt;Neural Construct&lt;/a&gt;. These &lt;a class="reference external" href="https://gatc.ca/projects/"&gt;projects&lt;/a&gt; have been programmed in &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;/&lt;a class="reference external" href="https://www.pygame.org/"&gt;Pygame&lt;/a&gt;. One important update has been to adapt the GUI interface panel that I started in the &lt;a class="reference external" href="https://gatc.ca/projects/microbe/"&gt;Microbe&lt;/a&gt; program to function in my other programs. This led to the evolution of the &lt;a class="reference external" href="https://gatc.ca/projects/interphase/"&gt;Interphase&lt;/a&gt; module.&lt;/p&gt;
</content><category term="Artificial Life, Biology, Programming"/></entry><entry><title>Neural Construct Released</title><link href="https://gatc.ca/neural-construct-released/" rel="alternate"/><published>2009-08-07T18:00:00-04:00</published><updated>2009-08-07T18:00:00-04:00</updated><author><name>JG</name></author><id>tag:gatc.ca,2009-08-07:/neural-construct-released/</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://gatc.ca/projects/neural-construct/"&gt;Neural Construct&lt;/a&gt; is a neural simulation program. The construct is a neuron matrix that is responsive to stimuli. The individual neurons have been programmed with some basic neuron functionality, and along with the neural interconnections that network through the construct, emerge complex signals. I programmed it in &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;/&lt;a class="reference external" href="https://www.pygame.org/"&gt;Pygame&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://gatc.ca/projects/neural-construct/"&gt;Neural Construct&lt;/a&gt; is a neural simulation program. The construct is a neuron matrix that is responsive to stimuli. The individual neurons have been programmed with some basic neuron functionality, and along with the neural interconnections that network through the construct, emerge complex signals. I programmed it in &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt;/&lt;a class="reference external" href="https://www.pygame.org/"&gt;Pygame&lt;/a&gt;.&lt;/p&gt;
</content><category term="Artificial Life, Biology, Programming"/></entry><entry><title>Replicator Machine Released</title><link href="https://gatc.ca/replicator-machine-released/" rel="alternate"/><published>2009-07-12T18:00:00-04:00</published><updated>2009-07-12T18:00:00-04:00</updated><author><name>JG</name></author><id>tag:gatc.ca,2009-07-12:/replicator-machine-released/</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://gatc.ca/projects/replicator/"&gt;Replicator Machine&lt;/a&gt; is a viral infection simulation. The program simulates basic infection in which the virus infects a cell and replicates. In control of a nanobot, you can combat the virus. I programmed it using the &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; programming language and the &lt;a class="reference external" href="https://www.pygame.org/"&gt;Pygame&lt;/a&gt; library.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://gatc.ca/projects/replicator/"&gt;Replicator Machine&lt;/a&gt; is a viral infection simulation. The program simulates basic infection in which the virus infects a cell and replicates. In control of a nanobot, you can combat the virus. I programmed it using the &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; programming language and the &lt;a class="reference external" href="https://www.pygame.org/"&gt;Pygame&lt;/a&gt; library.&lt;/p&gt;
</content><category term="Artificial Life, Biology, Programming"/></entry><entry><title>Microbe Released</title><link href="https://gatc.ca/microbe-released/" rel="alternate"/><published>2009-03-08T18:00:00-04:00</published><updated>2009-03-08T18:00:00-04:00</updated><author><name>JG</name></author><id>tag:gatc.ca,2009-03-08:/microbe-released/</id><summary type="html">&lt;p&gt;With the intent to apply a computational approach to experiment with biological concepts, I have been learning programming. I have dual goals, to explore the code of life and to venture into the realm of artificial life. With this aspiration, I have pursued several projects that are designed in &lt;a class="reference external" href="https://www.python.org/"&gt;Python …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;With the intent to apply a computational approach to experiment with biological concepts, I have been learning programming. I have dual goals, to explore the code of life and to venture into the realm of artificial life. With this aspiration, I have pursued several projects that are designed in &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; programming language. One program that is fairly advanced is &lt;a class="reference external" href="https://gatc.ca/projects/microbe/"&gt;Microbe&lt;/a&gt;, a microbial simulation. Plan to share other experiments in the future, hope they are of interest and inspirational.&lt;/p&gt;
</content><category term="Artificial Life, Biology, Programming"/></entry></feed>